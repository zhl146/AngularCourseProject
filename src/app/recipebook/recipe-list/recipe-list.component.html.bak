<div class="recipe-list"
     fxLayout="column">
  <!--<md-card class="recipe-detail-container"-->
           <!--*ngIf="recipeInfo"-->
           <!--fxHide.gt-sm>-->
    <!--<md-card-header>-->
      <!--<md-card-title>-->
        <!--<h2>Welcome to your recipe book!</h2>-->
      <!--</md-card-title>-->
    <!--</md-card-header>-->
    <!--<md-card-content>-->
      <!--<p>-->
        <!--This recipe book comes with 3 recipes, but you can delete them-->
        <!--and add your own if you like! The recipes are saved-->
        <!--on a remote database, so they will be here when you return.-->
      <!--</p>-->
      <!--<p>-->
        <!--Click on a recipe to view its details and edit them. You may also add some or all-->
        <!--of its ingredients to your shopping list.-->
      <!--</p>-->
    <!--</md-card-content>-->

    <!--<button md-raised-button-->
            <!--(click)="onGotIt()"-->
            <!--color="accent">-->
      <!--Got it-->
    <!--</button>-->

  <!--</md-card>-->

  <ng-container *ngIf="currentRecipeIndex !== null">
    <div fxFlex="1 0 auto"
         fxLayout="column"
         class="recipe-image-card" [@slideDownAnimation]>

      <div class="card-image-container"
           appDivImage
           [src]="recipes[currentRecipeIndex].imagePath"
           fallback="http://i347.photobucket.com/albums/p476/zhl146/recipe-placeholder_zpst2nnqbq6.png">

        <button md-fab class="mobile-favorite-fab"
                (click)="onFavorite()"
                [@growInAnimation]>
          <md-icon class="pink-icon"
                   [@exchangeIconAnimation]="getfavState()">
            {{getFavIcon()}}
          </md-icon>
        </button>


      </div>

      <div class="fab-container-nav" fxHide.lt-md>
        <app-recipe-nav fxLayout="row" fxLayoutAlign="center"></app-recipe-nav>
      </div>


    </div>

    <md-card [@slideDownAnimation]>
      <md-card-header>
        <md-card-title>
          <h2>{{recipes[currentRecipeIndex].name | titlecase }}</h2>
        </md-card-title>
      </md-card-header>
      <md-card-content>
        <p>{{recipes[currentRecipeIndex].description}}</p>
      </md-card-content>
    </md-card>
  </ng-container>

  <div fxLayoutWrap fxLayoutAlign="center" *ngIf="this.currentRecipeIndex === null">
    <button md-raised-button
            class="new-recipe-btn"
            color="accent"
            routerLink="new"
            fxFlex="100">
      Create New Recipe
    </button>

    <form [formGroup]="recipeForm" fxFlex="80">
      <md-input-container fxFlex="100">
        <input mdInput
               fxFlex="100"
               formControlName="filter"
               [(ngModel)]="filterString"
               placeholder="search">
        <md-icon *ngIf="filterString"
                 (click)="clearFilter()">clear</md-icon>
      </md-input-container>
    </form>
  </div>


  <md-list fxFlex="100" fxLayout="row" fxLayoutWrap  *ngIf="listDisplay()">
    <div *ngFor="let recipe of recipes | recipeFilter: filterString; let i = index"
         fxFlex="100" fxLayout="row" fxLayoutWrap>

      <md-list-item fxFlex="100"
                    [@recipeItemState]="getRecipeItemState(i)"
                    (click)="onSelected(i)">
        <md-icon md-list-icon *ngIf="recipe.favorite" color="accent">favorite</md-icon>
        <md-icon md-list-icon *ngIf="!recipe.favorite">favorite_border</md-icon>
        <h4 md-line>{{recipe.name | titlecase}}</h4>
        <p md-line>Ready in: {{ recipe.prepTime + recipe.cookTime | timePipe}}</p>
      </md-list-item>

    </div>

  </md-list>

</div>



